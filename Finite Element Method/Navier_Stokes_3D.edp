// https://modules.freefem.org/modules/navier-stokes/

// load relevant modules
load "msh3" 
load "medit"
load "tetgen"
load "gmsh"

//Parameters
real uMax = 10.;

real Rho = 1.;
real Mu = 1.;

func fx = 0.;
func fy = 0.;

real T = 1.;
real dt = 1.e-1;

mesh3 Th=gmshload3("..\\Geometry\\Navier_Stokes_Cube.msh");

plot(Th);

// //Fespace
// fespace Uh(Th, [P2, P2]);
// Uh [ux, uy];
// Uh [upx, upy];
// Uh [vx, vy];

// fespace Ph(Th, P1);
// Ph p;
// Ph q;

// //Macro
// macro grad(u) [dx(u), dy(u)] //
// macro Grad(U) [grad(U#x), grad(U#y)]//
// macro div(ux, uy) (dx(ux) + dy(uy)) //
// macro Div(U) div(U#x, U#y) //

// //Function
// func uIn = uMax * (1.-(y-D/2.)^2/(D/2.)^2);

// //Problem
// problem NS ([ux, uy, p],[vx, vy, q])
	// = int2d(Th)(
		  // (Rho/dt) * [ux, uy]' * [vx, vy]
		// + Mu * (Grad(u) : Grad(v))
		// - p * Div(v)
		// - Div(u) * q
	// )
	// - int2d(Th)(
		  // (Rho/dt) * [	convect([upx, upy], -dt, upx), 
						// convect([upx, upy], -dt, upy)
					 // ]'*[vx,vy]
		// + [fx, fy]' * [vx, vy]
	// )
	// + on(Inlet, ux=uIn, uy=0.)
	// + on(Wall, ux=0., uy=0.)
	// ;

// // Time loop
// int nbiter = T / dt;
// for (int i = 0; i < nbiter; i++) {
	// // Update
	// [upx, upy] = [ux, uy];

	// // Solve
	// NS;

	// //Plot
	// //plot(p, cmm="Pressure - i="+i);
	// plot([ux, uy], cmm="Velocity - i="+i);
// }