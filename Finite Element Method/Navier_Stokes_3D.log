-- FreeFem++ v4.9 (Tue, Apr 20, 2021 12:10:29 AM - git v4.9)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue
    1 : // https://modules.freefem.org/modules/navier-stokes/
    2 :
    3 : // load relevant modules
    4 : load "msh3"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\msh3 = 0)
    5 : load "medit"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\medit = 0)
    6 : load "tetgen"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\tetgen = 0) load: tetgen
 
    7 : load "gmsh"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\gmsh = 0)
    8 : load "UMFPACK64"(load: loadLibary C:\Program Files (x86)\FreeFem++\\.\UMFPACK64 = 0)
    9 : // load "MUMPS"
   10 :
   11 : //Parameters
   12 : real uMax = 10.;
   13 :
   14 : real Rho = 500.;
   15 : real Mu = 0.1;
   16 :
   17 : func fx = -1.;
   18 : func fy = -1.;
   19 : func fz = +1.;
   20 :
   21 : real T = 10.;
   22 : real dt = 1.;
   23 :
   24 : mesh3 Th = gmshload3("..\Geometry\Navier_Stokes_Cube.msh");
   25 : plot(Th);
   26 :
   27 : //Fespace
   28 : fespace Uh(Th, [P2, P2, P2]);
   29 : Uh [ux, uy, uz];
   30 : Uh [upx, upy, upz];
   31 : Uh [vx, vy, vz];
   32 :
   33 : fespace Ph(Th, P1);
   34 : Ph p;
   35 : Ph q;
   36 :
   37 : //Macro
   38 : macro grad(u) [dx(u), dy(u), dz(u)]  )  //
   39 : macro Grad(U) [grad(U#x), grad(U#y), grad(U#z)] )  //
   40 : macro div(ux, uy, uz) (dx(ux) + dy(uy) + dz(uz))  )  //
   41 : macro Div(U) div(U#x, U#y, U#z)  )  //
   42 :
   43 : //Function
   44 : // func uIn = uMax * (1.-(y-D/2.)^2/(D/2.)^2);
   45 :
   46 : //Problem
   47 : int ii=0;
   48 : // problem NS ([ux, uy, uz, p], [vx, vy, vz, q], solver=sparsesolver, init=ii)
   49 : problem NS ([ux, uy, uz], [vx, vy, vz], solver=sparsesolver, init=ii)
   50 :         = int3d(Th)(
   51 :                   (Rho/dt) * [ux, uy, uz]' * [vx, vy, vz]
   52 :                 + Mu * (Grad(u)    [grad(ux)     [dx(ux), dy(ux), dz(ux)] , grad(uy)     [dx(uy), dy(uy), dz(uy)] , grad(uz)     [dx(uz), dy(uz), dz(uz)] ] : Grad(v)    [grad(vx)     [dx(vx), dy(vx), dz(vx)] , grad(vy)     [dx(vy),
dy(vy), dz(vy)] , grad(vz)     [dx(vz), dy(vz), dz(vz)] ])
   53 :                 // - p * Div(v)
   54 :                 // - Div(u) * q
   55 :                 // -  1e-6*p*q
   56 :         )
   57 :         - int3d(Th)(
   58 :                   // (Rho/dt) * [       convect([upx, upy, upz], -dt, upx),
   59 :                                                 // convect([upx, upy, upz], -dt, upy),
   60 :                                                 // convect([upx, upy, upz], -dt, upz)
   61 :                                          // ]'*[vx,vy,vz]
   62 :                  [fx, fy, fz]' *[vx, vy,vz]
   63 :         )
   64 :         + on(16, ux=0., uy=0., uz=5.)
   65 :         + on(17, ux=0., uy=0., uz=0.)
   66 :         ;
   67 :
   68 : //Initialization
   69 : [ux, uy, uz] = [0, 0, 0];
   70 : // p = 0;
   71 :
   72 : // Time loop
   73 : int nbiter = T / dt;
   74 : for (int i = 0; i < nbiter; i++) {
   75 :
   76 :         cout << "ux min " <<  ux[].min << "\n";
   77 :         cout << "uy min " <<  uy[].min << "\n";
   78 :         cout << "uz min " <<  uz[].min << "\n";
   79 :         // cout << "p min "  <<   p[].min << "\n";
   80 :
   81 :         // Update
   82 :         [upx, upy, upz] = [ux, uy, uz];
   83 :
   84 :         // Solve
   85 :         NS;
   86 :
   87 :         //Plot
   88 :         // plot(p, cmm="Pressure - i="+i);
   89 :         // plot([ux, uy, uz], cmm="Velocity - i="+i);
   90 :         plot(ux, cmm="Ux velocity - i="+i);
   91 :
   92 : }
   93 :
   94 :  sizestack + 1024 =2648  ( 1624 )
 
8151 tetrahedrons
2232 triangles
10383 numElements
  Plot::  Sorry no ps version for this type of plot 5
  -- Build Nodes/DF on mesh :   n.v. 1919, n. elmt. 8151, n b. elmt. 2232
     nb of Nodes 13103    nb of DoF   39309  DFon=3300
  -- FESpace: Nb of Nodes 13103 Nb of DoF 39309
  -- FESpace: Nb of Nodes 1919 Nb of DoF 1919
ux min 0
uy min 0
uz min 0
  -- Solve :
          min -1.09414  max 5
  Plot::  Sorry no ps version for this type of plot 6
ux min -1.09414
uy min -1.09414
uz min -1.09414
  -- Solve :
          min -1.09414  max 5
  Plot::  Sorry no ps version for this type of plot 6
ux min -1.09414
uy min -1.09414
uz min -1.09414
  -- Solve :
          min -1.09414  max 5
  Plot::  Sorry no ps version for this type of plot 6
ux min -1.09414
uy min -1.09414
uz min -1.09414
  -- Solve :
          min -1.09414  max 5
  Plot::  Sorry no ps version for this type of plot 6
ux min -1.09414
uy min -1.09414
uz min -1.09414
  -- Solve :
          min -1.09414  max 5
  Plot::  Sorry no ps version for this type of plot 6
ux min -1.09414
uy min -1.09414
uz min -1.09414
 try getConsole C:\Users\sarao\OneDrive\Development\Cabinet\Finite Element Method\Navier_Stokes_3D.edp
